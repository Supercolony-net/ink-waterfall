# .gitlab-ci.yml
#
# ink-waterfall
#
# pipelines can be triggered manually in the web

stages:
  - test

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       "100"
  CARGO_HOME:                      "/ci-cache/${CI_PROJECT_NAME}/cargo/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  RUST_LIB_BACKTRACE:              "0"
  RUST_LOG:                        "info"
  CI_IMAGE:                        "paritytech/ink-waterfall-ci:latest"
  INK_EXAMPLES_PATH:               "./ink/examples/"
  DELEGATOR_SUBCONTRACTS:          "accumulator adder subber"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - ./.scripts/pre_cache.sh
    - sccache -s
    - git show
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
  dependencies:                    []
  interruptible:                   true
  retry:
    max:                           2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - linux-docker

.prepare:                          &prepare
  - canvas --tmp --dev -lruntime::contracts=debug > /tmp/canvas.log 2>&1 &
  - git clone --depth 1 --branch ${UPSTREAM_BRANCH:-master} https://github.com/paritytech/ink.git

.build-contracts:                  &build-contracts
  - for example in ${INK_EXAMPLES_PATH}/*/; do
      echo "cargo contract build --manifest-path=${example}/Cargo.toml" >> /tmp/cmds;
    done
  - for contract in ${DELEGATOR_SUBCONTRACTS}; do
      echo "cargo contract build --manifest-path=${INK_EXAMPLES_PATH}/delegator/${contract}/Cargo.toml" >> /tmp/cmds;
    done
  - cat /tmp/cmds | xargs -P 2 -I{} bash -c "{}"

.shutdown:                          &shutdown
  - pkill -f -x "canvas --tmp --dev"

canvas-ui-ink-examples:
  stage:                           test
  <<:                              *docker-env
  before_script:
    - *prepare
  script:
    - *build-contracts
    - WATERFALL_SKIP_CONTRACT_BUILD=true cargo test --features headless
  after_script:
    - *shutdown

polkadot-js-ui-ink-examples:
  stage:                           test
  <<:                              *docker-env
  before_script:
    - *prepare
  script:
    - *build-contracts
    - WATERFALL_SKIP_CONTRACT_BUILD=true cargo test --features headless,polkadot-js-ui
  after_script:
    - *shutdown

canvas-ui-rand-extension:
  stage:                           test
  <<:                              *docker-env
  before_script:
    - *prepare
  script:
    - cargo test --features headless -- --ignored rand_extension
  after_script:
    - *shutdown

polkadot-js-ui-rand-extension:
  stage:                           test
  <<:                              *docker-env
  before_script:
    - *prepare
  script:
    - cargo test --features headless,polkadot-js-ui -- --ignored rand_extension
  after_script:
    - *shutdown